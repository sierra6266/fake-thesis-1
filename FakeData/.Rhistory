library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_12AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_12AUG23.csv"))
t1 = data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest")) %>%
tbl_summary(by=exp_vax)
t1 = data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax)
view(t1)
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax)
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_12AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_12AUG23.csv"))
#peek at data
head(data)
#look at classes
lapply(data, class)
# summary of data. Look for categories with small numbers of people
stview(dfSummary(data))
# Get col names from df
x <- colnames(data)
# print them as a vector
dput(x)
# save ones I need to this vector (removed id, ageg, exp_flu, exp_vax, out_ai, failed,  )
vars = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest")
# create crude table
t1_crude = CreateTableOne(strata= "exp_vax", vars = vars, data=data, test=F)
print(t1_crude, smd=T)
# ster, comorb, care, par, smk, rur, quint, br all above 0.10
# check missing data set
t1_crude_miss = CreateTableOne(strata= "exp_vax", vars = vars, data=data_missing, test=F)
print(t1_crude_miss, smd=T)
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax)
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax)
knitr::opts_chunk$set(echo = TRUE)
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax)
d2 = data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax"))
install.packages("gt")
install.packages("xfun")
install.packages("gt")
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_12AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_12AUG23.csv"))
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax)
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd")
# Get col names from df
x <- colnames(data)
# print them as a vector
dput(x)
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd")
cat = c("id", "sex", "phu", "ster", "out_ai", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "exp_vax", "comp",
"exp_flu", "bf", "seas", "bw")
con = c("age", "futime","gest")
data %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
mutate(across(cat), as.factor) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd")
data %>%
mutate(across(cat), as.factor) %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd")
data %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd")
cat = c("id", "sex", "phu", "ster", "out_ai", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "exp_vax", "comp",
"exp_flu", "bf", "seas", "gest")
con = c("age", "futime","bw")
knitr::opts_chunk$set(echo = TRUE)
data %>%
mutate(phu = case_when(phu == 1:10 ~ 1,
phu == 11:20 ~ 2,
phu == 21:30 ~ 3,
phu == 31:40 ~ 4,
phu == 41:50 ~ 5,
phu == 51:70 ~ 6,
TRUE ~ NA_real_))
data %>%
mutate(phu = case_when(phu == (1:10) ~ 1,
phu == 11:20 ~ 2,
phu == 21:30 ~ 3,
phu == 31:40 ~ 4,
phu == 41:50 ~ 5,
phu == 51:70 ~ 6,
TRUE ~ NA_real_))
data %>%
mutate(phu = case_when(phu == (1:10) ~ 1,
phu == (11:20) ~ 2,
phu == (21:30) ~ 3,
phu == (31:40) ~ 4,
phu == (41:50) ~ 5,
phu == (51:70) ~ 6,
TRUE ~ NA_real_))
data %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_))
data %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_)) %>%
tabyl(phu)
data %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_)) %>%
filter(is.missing(phu))
data %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_)) %>%
filter(is.NA(phu))
data %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_)) %>%
filter(is.na(phu))
# To change fmonth to season of conception
spring = c("April", "May", "June")
summer= c("July", "August", "September")
fall = c("October", "November", "December")
winter = c("January", "February", "March")
# to aggregate the lower income categories
low = c("Less than $10,000", "Less than $15,000", "Less than $20,000", "Less than $25,000")
# create birthweight variable
bw = floor(rnorm(465473, mean = 3100, sd = 385))
# create gestational age variable
gest = sample(x=c(1, 2, 3),
prob = c(.079, .915, .006),
size=465473, replace=TRUE)
# check it
prop.table(table(gest))
# create 20,057 random IDs to increase NAs in exp_vax later
nas = sample(1:491775, 34806, replace=F)
# load data
brfss <- read_csv(here("Data", "brfss2013.csv"))
data_missing <- read_csv(here("Data", "brf-fakedata-missing_12AUG23.csv")) %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_))
data = read_csv(here ("Data", "brf-fakedata-no-missing_12AUG23.csv")) %>%
mutate(phu = case_when(phu %in% 1:10 ~ 1,
phu %in% 11:20 ~ 2,
phu %in% 21:30 ~ 3,
phu %in% 31:40 ~ 4,
phu %in% 41:50 ~ 5,
phu %in% 51:70 ~ 6,
TRUE ~ NA_real_))
print(t1_crude, smd=T)
t1_crude = CreateTableOne(strata= "exp_vax", vars = vars, data=data, test=F)
# save ones I need to this vector (removed id, ageg, exp_flu, exp_vax, out_ai, failed,  )
vars = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest")
t1_crude = CreateTableOne(strata= "exp_vax", vars = vars, data=data, test=F)
print(t1_crude, smd=T)
data %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd")
#output data
write.csv(data_missing, file=here::here("Data","brf-fakedata-missing_17AUG23.csv"), row.names=FALSE)
#output data
write.csv(data, file=here::here("Data","brf-fakedata-no-missing_17AUG23.csv"), row.names=FALSE)
data %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd") %>%
as_flex_table() %>%
save_as_docx()
data %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd") %>%
as_flex_table() %>%
flextable::save_as_docx(path="tbl1.docx")
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_17AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_17AUG23.csv"))
knitr::opts_chunk$set(echo = TRUE)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_17AUG23.csv"))
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_17AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_17AUG23.csv"))
data %>%
tabyl(phu)
data_missing %>%
tabyl(phu)
data_missing %>%
filter(is.na(phu)) %>%
tabyl(phu)
install.packages("Matchit")
install.packages("MatchIt")
library(MatchIt)
# Get col names from df
x <- colnames(data)
x
formula = exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk)
install.packages("WeightIt")
library(WeightIt)
fit.ps = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk), data=data, family=binomial)
data$ps = predict(fit.ps, type="response")
tapply(data$ps, data$exp_vax, summary)
plot(density(data[data$exp_vax == 1, c("ps")]), main = "Propensity Scores", xlab = "")
plot(density(data[data$exp_vax == 1, c("ps")]), main = "Propensity Scores", ylim = c(1,6), xlab = "")
data %>%
mutate(as.numeric(exp_vax)) %>%
plot(density(data[data$exp_vax == 1, c("ps")]), main = "Propensity Scores", ylim = c(1,6), xlab = "")
View(data)
# Change density plot line colors by groups
ggplot(data, aes(x=ps, color=exp_vax)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(data, aes(x=ps, color=exp_vax)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, color=exp_vax)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=group)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density()
# Add mean lines
p<-ggplot(data, aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density()+
geom_vline(data=mu, aes(xintercept=grp.mean, color=exp_vax),
linetype="dashed")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density() +
title(main = "Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=as.factor(exp_vax), color=exp_vax)) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=as.factor(exp_vax), color= as.factor(exp_vax))) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(exp_vax = as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color= exp_vax)) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(exp_vax = as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color= exp_vax)) +
geom_density() +
ggtitle("Propensity Scores") +
theme_light()
weights = weightit(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk),
data = data,
estimand = "ATE",
stabilize = F,
method = "ps")
summary(weights$weights)
weights = weightit(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk),
data = data,
estimand = "ATE",
stabilize = T,
method = "ps")
summary(weights$weights)
require(cobalt)
bal.tab(weights, un = T, thresholds = c(m = .1))
love.plot(weights)
install.packages("survey")
View(data)
knitr::opts_chunk$set(echo = TRUE)
svy_data <-  survey::svydesign(
id = ~id,
weights = ~weights$weights,
data = data)
cat = c("id", "sex", "phu", "ster", "out_ai", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "exp_vax", "comp",
"exp_flu", "bf", "seas", "gest")
con = c("age", "futime","bw")
svy_data %>%
mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
library(tidyverse)
svy_data %>%
mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
svy_data %>%
mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
svy_data %>%
# mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
# convert df to survey object
fct_data = data %>%
mutate(across(all_of(cat), as.factor))
svy_data <-  survey::svydesign(
id = ~id,
weights = ~weights$weights,
data = fct_data)
# 1. estimate ps using glm
fit.ps = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) + factor(matai), data=data, family=binomial)
# get the predicted values
data$ps = predict(fit.ps, type="response")
love.plot(weights)
