filter(old.name == "care") %>%
list(new.lvl)
View(key)
care.lbl = key %>%
filter(old.name == care) %>%
list(new.lvl)
care.lbl = key %>%
filter(old.name == 'care') %>%
list(key$new.lvl)
View(care.lbl)
View(key)
View(care.lbl)
View(key)
View(care.lbl)
care.lbl = care.lbl[[2]]
View(labels)
care.lbl = list(care.lbl[[2]])
View(care.lbl)
care.lbl = key %>%
filter(old.name == 'care') %>%
list(strsplit(key$new.lvl, ","))
View(care.lbl)
keyflip = key %>%
list(strsplit(key$new.lvl, ","))
View(keyflip)
kf = key %>%
pivot_wider(
names_from = old.name,
values_from = new.lvl
)
View(kf)
View(key)
kf = key %>%
select(old.name, new.lvl) %>%
pivot_wider(
names_from = old.name,
values_from = new.lvl
)
View(key)
View(kf)
kf2 = as.list(kf)
View(kf2)
kf2 = as.list(strsplit(kf,","))
kf2 = list(strsplit(kf,","))
View(kf2)
kf2 = as.list(kf)
View(kf2)
print(kf)
print(kf2)
kf = key %>%
select(old.name, new.lvl) %>%
mutate(new.lvl = strsplit(new.lvl, ",")) %>%
pivot_wider(
names_from = old.name,
values_from = new.lvl)
View(kf)
kf2 = as.list(kf)
print(kf2)
View(kf2)
kf2$bf[2]
kf2$bf[[2]]
kf2$bf
bf2 = list(kf2$bf)
View(bf2)
bf2 = as.list(kf2$bf)
bf2 = strsplit(kf2$bf)
bf2 = strsplit(kf2$bf," ")
labels_list <- structure(list(Variable = structure(c(1L, 1L, 1L, 2L, 2L, 2L,
2L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 4L, 4L), .Label = c("A1",
"B1", "C1", "D1"), class = "factor"), Value = c(1L, 2L, 3L, 1L,
2L, 3L, 4L, 1L, 2L, 3L, 4L, 5L, 1L, 2L, 3L, 4L, 5L, 6L), Label = structure(c(15L,
3L, 18L, 17L, 8L, 12L, 16L, 5L, 1L, 7L, 14L, 13L, 11L, 10L, 9L,
2L, 4L, 6L), .Label = c("Atlanta", "Bill", "Blue", "Bob", "Boston",
"Brian", "Dallas", "Down", "Jake", "Jim", "John", "Left", "Los_Angeles",
"New_York", "Red", "Right", "Up", "Yellow"), class = "factor")), class = "data.frame", row.names = c(NA,
-18L))
df <- tibble(A1 = rep(1:3,2),
B1 = c(1:4, 1, 2),
C1 = c(1:5, 1),
D1 = 1:6
)
View(df)
View(labels_list)
df %>%
gather(key = Variable, value = Value) %>%
left_join(labels_list, by = c("Variable", "Value")) %>%
select(-Value) %>%
group_by(Variable) %>%
mutate(row = row_number()) %>%
spread(key = Variable, value = Label)
View(df)
View(key)
test = key %>%
separate_rows(old.lvl, sep=",")
View(test)
test = key %>%
separate_rows(old.lvl, new.lvl, sep=",")
View(test)
key2 = key %>%
separate_rows(old.lvl, new.lvl, sep=",")
data = read_csv(here("Data","ind-ai-no-missing_28AUG23.csv"))
View(df)
View(labels)
View(labels_list)
View(key2)
View(labels_list)
View(labels_list)
View(df)
View(key2)
data %>%
gather(key = Variable, value = Value) %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
select(-Value) %>%
group_by(Variable) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
data %>%
gather(key = Variable, value = Value)
View(df)
View(labels_list)
dd %>%
head(500) %>%
gather(key = Variable, value = Value)
dd = data %>%
head(500) %>%
gather(key = Variable, value = Value)
View(dd)
dd = data %>%
head(500) %>%
gather(key = old.name, value = old.lvl)
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
dd %>%
left_join(key2, by = c("old.name", "old.lvl"))
View(key2)
key2 = key %>%
separate_rows(old.lvl, new.lvl, sep=",") %>%
mutate(old.lvl = as.numeric(old.lvl))
dd %>%
left_join(key2, by = c("old.name", "old.lvl"))
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
View(key2)
key2 = key %>%
separate_rows(old.lvl, new.lvl, sep=",") %>%
mutate(old.lvl = as.numeric(old.lvl)) %>%
select(-c(new.name))
View(key2)
key2 = key %>%
separate_rows(old.lvl, new.lvl, sep=",") %>%
mutate(old.lvl = as.numeric(old.lvl)) %>%
select(-c(new.name)) %>%
filter(!is.na(old.lvl))
View(key2)
dd = data %>%
head(500) %>%
gather(key = old.name, value = old.lvl)
View(dd)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
#select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
View(key2)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl"))
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(id = case_when(is.na(new.lvl) ~ id,
TRUE ~ new.lvl)) %>%
#select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(id = case_when(is.na(new.lvl) ~ id)) %>%
#select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(id = ifelse(is.na(new.lvl), id, new.lvl)) %>%
#select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl"))
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl)) %>%
#select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl))
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl)) %>%
select(-old.lvl) %>%
group_by(old.name) %>%
mutate(row = row_number()) %>%
spread(key = old.name, value = new.lvl)
key2 = key %>%
separate_rows(old.lvl, new.lvl, sep=",") %>%
mutate(old.lvl = as.numeric(old.lvl)) %>%
#select(-c(new.name)) %>%
filter(!is.na(old.lvl))
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name, old.name, new.name))) %>%
select(-C(old.lvl, old.name)) %>%
group_by(new.name) %>%
mutate(row = row_number()) %>%
spread(key = new.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name, old.name, new.name)))
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name))) %>%
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-C(old.lvl, old.name)) %>%
group_by(new.name) %>%
mutate(row = row_number()) %>%
spread(key = new.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-C("old.lvl", "old.name")) %>%
group_by(new.name) %>%
mutate(row = row_number()) %>%
spread(key = new.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-c(old.lvl, -old.name)) %>%
group_by(new.name) %>%
mutate(row = row_number()) %>%
spread(key = new.name, value = new.lvl)
# inspect 19 rows only in y
dd %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-c(old.lvl, old.name)) %>%
group_by(new.name) %>%
mutate(row = row_number()) %>%
spread(key = new.name, value = new.lvl)
dd = data %>%
head(500) %>%
summarize_all()
dd = data %>%
head(500) %>%
summarize_all(count)
dfSummary(dd)
stview(dfSummary(dd))
dd = data %>%
head(500)
stview(dfSummary(dd))
# inspect 19 rows only in y
dd2 = dd %>%
gather(key = old.name, value = old.lvl) %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-c(old.lvl, old.name)) %>%
group_by(new.name) %>%
mutate(row = row_number()) %>%
spread(key = new.name, value = new.lvl)
stview(dfSummary(dd2))
# inspect 19 rows only in y
dd3 = dd %>%
pivot_longer(
cols=!id,
names_to = "old.name",
values_to = "old.lvl") %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name))
View(dd3)
# inspect 19 rows only in y
dd3 = dd %>%
pivot_longer(
cols=!id,
names_to = "old.name",
values_to = "old.lvl") %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
#select(-c(old.lvl, old.name)) %>%
group_by(id) %>%
#mutate(row = row_number()) %>%
pivot_wider (
names_from = new.name,
values_from = new.lvl
) #keep new names and levels
View(dd3)
# inspect 19 rows only in y
dd3 = dd %>%
pivot_longer(
cols=!id,
names_to = "old.name",
values_to = "old.lvl") %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) #%>%
View(dd3)
select(-c(old.lvl, old.name)) %>%
group_by(id) %>%
#mutate(row = row_number()) %>%
pivot_wider (
names_from = new.name,
values_from = new.lvl
) #keep new names and levels
# inspect 19 rows only in y
dd3 = dd %>%
pivot_longer(
cols=!id,
names_to = "old.name",
values_to = "old.lvl") %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-c(old.lvl, old.name)) %>%
group_by(id) %>%
#mutate(row = row_number()) %>%
pivot_wider (
names_from = new.name,
values_from = new.lvl
) #keep new names and levels
View(dd3)
View(dd)
View(dd3)
# inspect 19 rows only in y
dd3 = data %>%
pivot_longer(
cols=!id,
names_to = "old.name",
values_to = "old.lvl") %>%
left_join(key2, by = c("old.name", "old.lvl")) %>%
mutate(new.lvl = ifelse(is.na(new.lvl), old.lvl, new.lvl),
new.name = ifelse(is.na(new.name), old.name, new.name)) %>%
select(-c(old.lvl, old.name)) %>%
group_by(id) %>%
pivot_wider (
names_from = new.name,
values_from = new.lvl
) #keep new names and levels
View(dd3)
View(data)
View(key2)
View(key)
require(sjlabelled)
require("sjlabelled")
install.packages("sjlabelled")
library(sjlabelled)
lookup <- data.table(id = paste0("q", 1:5),
answers = paste(paste0("atext", 1:5), paste0("btext", 1:5)
, paste0("ctext", 1:5), sep = ";"))
install.packages("data.table")
knitr::opts_chunk$set(echo = TRUE)
lookup <- data.table(id = paste0("q", 1:5),
answers = paste(paste0("atext", 1:5), paste0("btext", 1:5)
, paste0("ctext", 1:5), sep = ";"))
install.packages("data.table")
library(data.table)
lookup <- data.table(id = paste0("q", 1:5),
answers = paste(paste0("atext", 1:5), paste0("btext", 1:5)
, paste0("ctext", 1:5), sep = ";"))
d7 <- data.table(q1 = sample(1:3, 10, replace = TRUE),
q2 = sample(1:3, 10, replace = TRUE),
q3 = sample(1:3, 10, replace = TRUE),
q4 = sample(1:3, 10, replace = TRUE),
q5 = sample(1:3, 10, replace = TRUE))
View(d7)
View(lookup)
View(dd)
View(key2)
d5 <- set_labels(dd, labels = key2$new.lvl[match(names(dd), key2$old.name)])
library(sjlabelled)
d5 <- set_labels(dd, labels = key2$new.lvl[match(names(dd), key2$old.name)])
View(d5)
get_labels(d5$sex)
View(key)
d5 <- set_labels(dd, labels = strsplit(key$new.lvl[match(names(dd), key$old.name)], ","))
get_labels(d5$sex)
View(d5)
get_labels(d5)
d5 <- set_labels(data, labels = strsplit(key$new.lvl[match(names(data), key$old.name)], ","))
get_labels(d5)
d5 %>%
ggplot(aes(x=age, y=bw, color=as.factor(sex))) +
geom_point()
library(epiR)
library(data.table)
library(sjlabelled)
library(reshape2)
library(fastDummies)
library(smd)
library(lubridate)
library(survminer)
library(survival)
library(adjustedCurves)
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
d5 %>%
ggplot(aes(x=age, y=bw, color=as.factor(sex))) +
geom_point()
d5 %>%
ggplot(aes(x=age, y=bw, color=as.factor(sex))) +
geom_point() +
easy_labs()
install.packages("ggeasy")
library(ggeasy)
d5 %>%
ggplot(aes(x=age, y=bw, color=as.factor(sex))) +
geom_point() +
easy_labs()
d5 %>%
ggplot(aes(x=sex, color= phu)) +
geom_bar() +
easy_labs()
d5 %>%
ggplot(aes(x=factor(sex), color= phu)) +
geom_bar() +
easy_labs()
get_labels(d5)
d5 %>%
ggplot(aes(x=phu)) +
geom_bar() +
easy_labs()
d5 %>%
ggplot(aes(x=phu)) +
geom_bar() +
easy_labs()
View(d5)
str(d5)
t5 = d5 %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("phu", "ster", "comorb", "matai","itp", "jia", "t1d", "ibd", "celiac", "vasc", "sjo", "glom", "care",
"par", "smk", "multip", "rur", "quint", "comp", "age", "seas", "bw", "gest", "sex", "del", "bf", "exp_vax")) %>%
tbl_summary(by=exp_vax) %>%
add_overall() %>%
modify_spanning_header(c(stat_1, stat_2)  ~ "**2009 A/H1N1 influenza vaccination in pregnancy (unweighted)**")
t5
var_label(d6) =
d5 %>%
sjlabelled::as_label() %>%
ggplot(aes(x=phu)) +
geom_bar() +
easy_labs()
d5 %>%
sjlabelled::as_label() %>%
ggplot(aes(x=phu)) +
geom_bar() +
easy_labs()
View(key)
View(key2)
View(dd3)
