# Add mean lines
p<-ggplot(data, aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density()+
geom_vline(data=mu, aes(xintercept=grp.mean, color=exp_vax),
linetype="dashed")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density()
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density() +
title(main = "Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color=exp_vax)) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=as.factor(exp_vax), color=exp_vax)) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=as.factor(exp_vax), color= as.factor(exp_vax))) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(exp_vax = as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color= exp_vax)) +
geom_density() +
ggtitle("Propensity Scores")
# Change density plot line colors by groups
data %>%
mutate(exp_vax = as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color= exp_vax)) +
geom_density() +
ggtitle("Propensity Scores") +
theme_light()
weights = weightit(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk),
data = data,
estimand = "ATE",
stabilize = F,
method = "ps")
summary(weights$weights)
weights = weightit(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk),
data = data,
estimand = "ATE",
stabilize = T,
method = "ps")
summary(weights$weights)
require(cobalt)
bal.tab(weights, un = T, thresholds = c(m = .1))
love.plot(weights)
install.packages("survey")
View(data)
knitr::opts_chunk$set(echo = TRUE)
svy_data <-  survey::svydesign(
id = ~id,
weights = ~weights$weights,
data = data)
cat = c("id", "sex", "phu", "ster", "out_ai", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "exp_vax", "comp",
"exp_flu", "bf", "seas", "gest")
con = c("age", "futime","bw")
svy_data %>%
mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
library(tidyverse)
svy_data %>%
mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
svy_data %>%
mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
svy_data %>%
# mutate(across(all_of(cat), as.factor)) %>%
tbl_svysummary(
by = exp_vax,
include = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest", "exp_vax")) %>%
add_difference(everything() ~ "smd")
# convert df to survey object
fct_data = data %>%
mutate(across(all_of(cat), as.factor))
svy_data <-  survey::svydesign(
id = ~id,
weights = ~weights$weights,
data = fct_data)
# 1. estimate ps using glm
fit.ps = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) + factor(matai), data=data, family=binomial)
# get the predicted values
data$ps = predict(fit.ps, type="response")
love.plot(weights)
knitr::opts_chunk$set(echo = TRUE)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
data_missing <- read_csv(here("Data", "brf-fakedata-missing_17AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_17AUG23.csv"))
# make vectors of continuous and categorical vars
cat = c("id", "sex", "phu", "ster", "out_ai", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "exp_vax", "comp",
"exp_flu", "bf", "seas", "gest")
con = c("age", "futime","bw")
# model specification for maternal vaccination
# variables are the same ones from the SAS code plus maternal ai
# 1. estimate ps using glm
fit.ps = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) + factor(matai), data=data, family=binomial)
# get the predicted values
data$ps = predict(fit.ps, type="response")
# apply the summary function to the two exposure groups
tapply(data$ps, data$exp_vax, summary)
# plots totally overlap? Maybe something went wrong.
data %>%
mutate(exp_vax = as.factor(exp_vax)) %>%
ggplot(aes(x=ps, group=exp_vax, color= exp_vax)) +
geom_density() +
ggtitle("Propensity Scores") +
theme_light()
weights = weightit(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) +factor(matai),
data = data,
estimand = "ATE",
stabilize = T,
method = "ps")
summary(weights$weights)
require(cobalt)
bal.tab(weights, un = T, thresholds = c(m = .1))
# all of them are balanced now!
love.plot(weights)
ggsave("loveplot.png")
install.packages("cobalt")
install.packages("cobalt")
knitr::opts_chunk$set(echo = TRUE)
library(cobalt)
# make binary vars factors
fct_data = data %>%
mutate(across(all_of(cat), as.factor))
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
# make binary vars factors
fct_data = data %>%
mutate(across(all_of(cat), as.factor))
# convert df to survey object
svy_data <-  survey::svydesign(
id = ~id,
weights = ~weights$weights,
data = fct_data)
# only the vars included in the ps plus matai
svy_data %>%
tbl_svysummary(
by = exp_vax,
include = c("phu", "ster", "comorb", "matai", "care",
"par", "smk", "multip", "rur", "quint", "comp", "age", "seas", "matai")) %>%
add_difference(everything() ~ "smd") %>%
as_flex_table()
# only the vars included in the ps plus matai
tbl1_wght = svy_data %>%
tbl_svysummary(
by = exp_vax,
include = c("phu", "ster", "comorb", "matai", "care",
"par", "smk", "multip", "rur", "quint", "comp", "age", "seas", "matai")) %>%
add_difference(everything() ~ "smd") %>%
as_flex_table()
output = here("Data")
tbl1_wght %>%
save_as_docx("20-08-23_tbl1-weighted", path = output)
tbl1_wght %>%
save_as_docx(path = here("Data", "20-08-23_tbl1-weighted.docx" ))
tbl1_wght %>%
save_as_docx(path = here("Output", "20-08-23_tbl1-weighted.docx" ))
knitr::opts_chunk$set(echo = TRUE)
# save ones I need to this vector (removed id, ageg, exp_flu, exp_vax, out_ai, failed,  )
vars = c("sex", "phu", "ster", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "comp",
"bf", "age", "futime", "seas", "bw", "gest")
data %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("phu", "ster", "comorb", "matai", "care",
"par", "smk", "multip", "rur", "quint", "comp", "age", "seas", "bw", "gest", "exp_vax", "sex", "del", "bf", "futime")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd") %>%
as_flex_table() %>%
save_as_docx(path = here("Output", "20-08-23_tbl1.docx"))
install.packages("jtools")
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
ate_stab_dsgn = svydesign(id =~1, weights= ~weights$weights, data=fct_data, nest=TRUE)
ate_fit = svyglm(out_ai~exp_vax, family = quasibinomial, design = ate_stab_dsgn)
summ(ate_fit, exp = T, confint = T)
View(svy_data)
install.packages("adjustedCurves")
library(adjustedCurves)
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
glm_mod = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) +factor(matai),
data = data,
family = "binomial")
adjsurv = adjustedsurv(data=data,
variable = "exp_vax",
ev_time = "futime",
event = "out_ai",
method = "iptw_cox",
treatment_model=glm_mod)
adjsurv = adjustedsurv(data=fct_data,
variable = "exp_vax",
ev_time = "futime",
event = "out_ai",
method = "iptw_cox",
treatment_model=glm_mod)
glm_mod = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) +factor(matai),
data = fct_data,
family = "binomial")
adjsurv = adjustedsurv(data=fct_data,
variable = "exp_vax",
ev_time = "futime",
event = "out_ai",
method = "iptw_cox",
treatment_model=glm_mod)
View(fct_data)
glm_mod = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) +factor(matai),
data = data,
family = "binomial")
adjsurv = adjustedsurv(data=data,
variable = "exp_vax",
ev_time = "futime",
event = "out_ai",
method = "iptw_cox",
treatment_model=glm_mod)
d2 = data %>%
mutate(exp_vax = as.factor(exp_vax))
glm_mod = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) +factor(matai),
data = d2,
family = "binomial")
adjsurv = adjustedsurv(data=d2,
variable = "exp_vax",
ev_time = "futime",
event = "out_ai",
method = "iptw_cox",
treatment_model=glm_mod)
glm_mod = glm(exp_vax ~ age + factor(seas) + factor(multip) + factor(comp) + factor(comorb) + factor(ster) + factor(rur) + factor(phu) + factor(par) + factor(quint) + factor(care) + factor(smk) +factor(matai),
data = d2,
family = "binomial" (link="logit"))
adjsurv = adjustedsurv(data=d2,
variable = "exp_vax",
ev_time = "futime",
event = "out_ai",
method = "iptw_cox",
treatment_model=glm_mod,
conf_int = T)
plot(adjsurv)
install.packages("survival")
knitr::opts_chunk$set(echo = TRUE)
# crude Cox PH model
cox_model_crude <- coxph(Surv(futime, out_ai == 1) ~ exp_vax, data = data)
library(survival)
library(adjustedCurves)
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
# crude Cox PH model
cox_model_crude <- coxph(Surv(futime, out_ai == 1) ~ exp_vax, data = data)
cox_fit_crude  <- cox_model_crude %>% broom::tidy(., conf.int = T, exponentiate = T)
# IPTW Cox PH model
cox_model_iptw <- coxph(Surv(futime, out_ai == 1) ~ exp_vax, data = data, weights = weights$weights)
cox_fit_iptw  <- cox_model_iptw %>% broom::tidy(., conf.int = T, exponentiate = T)
# HR
cox_fit_crude %>% bind_rows(cox_fit_iptw)
# crude Cox PH model
cox_model_crude <- coxph(Surv(futime, out_ai) ~ exp_vax, data = data)
cox_fit_crude  <- cox_model_crude %>% broom::tidy(., conf.int = T, exponentiate = T)
# IPTW Cox PH model
cox_model_iptw <- coxph(Surv(futime, out_ai) ~ exp_vax, data = data, weights = weights$weights)
cox_fit_iptw  <- cox_model_iptw %>% broom::tidy(., conf.int = T, exponentiate = T)
# HR
cox_fit_crude %>% bind_rows(cox_fit_iptw)
#summary
summary(cox_model_crude)
summary(cox_model_iptw)
ggsurvplot(survfit(cox_fit_iptw),
ggtheme = theme_minimal())
install.packages("survminer")
library(survminer)
ggsurvplot(survfit(cox_fit_iptw),
ggtheme = theme_minimal())
ggsurvplot(survfit(cox_model_iptw),
ggtheme = theme_minimal())
ggsurvplot(survfit(cox_model_iptw), data=data,
ggtheme = theme_minimal())
install.packages("epiR")
library(epiR)
library(survminer)
library(survival)
library(adjustedCurves)
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
epi.conf(data, ctype = "inc.rate", method = "exact", N = 229753, design = 1,
conf.level = 0.95) * 100
ncas <- 4; npop <- 200
tmp <- as.matrix(cbind(ncas, npop))
View(tmp)
options(scipen = 1, digits = 2)
ir_out_ai <- sum(data$out_ai==1) / sum(data$futime)
ir_out_ai <- sum(data$out_ai==1) / sum(data$futime)*365000
Sys.date()
Sys.date()
Sys.Date()
library(epiR)
library(lubridate)
library(survminer)
library(survival)
library(adjustedCurves)
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
date()
Sys.Date()
today = Sys.Date()
file = paste0(today,"_tbl1-weighted.docx")
tbl1_wght %>%
save_as_docx(path = here("Output", paste0(today,"_tbl1-weighted.docx")))
data %>%
mutate(across(all_of(cat), as.factor)) %>%
select (c("phu", "ster", "comorb", "matai", "care",
"par", "smk", "multip", "rur", "quint", "comp", "age", "seas", "bw", "gest", "exp_vax", "sex", "del", "bf", "futime")) %>%
tbl_summary(by=exp_vax) %>%
add_difference(everything() ~ "smd") %>%
as_flex_table()
# IPTW Cox PH model
cox_model_iptw <- coxph(Surv(futime, out_ai) ~ exp_vax,
data = data,
weights = weights$weights,
robust = T)
knitr::opts_chunk$set(echo = TRUE)
library(epiR)
library(lubridate)
library(survminer)
library(survival)
library(adjustedCurves)
library(jtools)
library(cobalt)
library(MatchIt)
library(WeightIt)
library(survey)
library(janitor)
library(tidyr)
library(summarytools)
library(haven)
library(here)
library(coxed)
library(tableone)
library(tidyverse)
library(ggplot2)
library(tidylog)
library(flextable)
library(gtsummary)
today = Sys.Date()
data_missing <- read_csv(here("Data", "brf-fakedata-missing_17AUG23.csv"))
data = read_csv(here ("Data", "brf-fakedata-no-missing_17AUG23.csv"))
# make vectors of continuous and categorical vars
cat = c("id", "sex", "phu", "ster", "out_ai", "comorb", "matai", "care",
"par", "smk", "del", "multip", "rur", "quint", "exp_vax", "comp",
"exp_flu", "bf", "seas", "gest")
con = c("age", "futime","bw")
install.packages("sqldf")
library(sqldf)
# create function
trunc_norm <- function(mean, sd, lower, upper) {
rtnorm(n = 1, mean = mean, sd = sd, lower = lower, upper = upper)
}
x = trunc_norm(10, 1, 2, 40)
install.packages("msm")
library(msm)
x = trunc_norm(10, 1, 2, 40)
